<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aylson.dc.mem.po.GiftSendDetail">
	<!-- <cache type="org.mybatis.caches.ehcache.LoggingEhcache" readOnly="true" 
		/> -->

	<resultMap id="ResultMap" type="com.aylson.dc.mem.vo.GiftSendDetailVo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="sendId" property="sendId" jdbcType="INTEGER" />
		<result column="giftId" property="giftId" jdbcType="INTEGER" />
		<result column="giftName" property="giftName" jdbcType="VARCHAR" />
		<result column="consignee" property="consignee" jdbcType="VARCHAR" />
		<result column="consigneePhone" property="consigneePhone" jdbcType="VARCHAR" />
		<result column="province" property="province" jdbcType="VARCHAR" />
		<result column="provinceId" property="provinceId" jdbcType="INTEGER" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="cityId" property="cityId" jdbcType="INTEGER" />
		<result column="area" property="area" jdbcType="VARCHAR" />
		<result column="areaId" property="areaId" jdbcType="INTEGER" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="accountType" property="accountType" jdbcType="INTEGER" />
		<result column="accountPk" property="accountPk" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="billCode" property="billCode" jdbcType="VARCHAR" />
		<result column="channel" property="channel" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="DB_Column_List">
		mem_gift_send_detail.id,
		mem_gift_send_detail.sendId,
		mem_gift_send_detail.giftId,
		mem_gift_send_detail.giftName,
		mem_gift_send.consignee,
		mem_gift_send.consigneePhone,
		mem_gift_send.province,
		mem_gift_send.provinceId,
		mem_gift_send.city,
		mem_gift_send.cityId,
		mem_gift_send.area,
		mem_gift_send.areaId,
		mem_gift_send.address,
		mem_gift_send.state,
		mem_gift_send.remark,
		mem_gift_send.accountType,
		mem_gift_send.accountPk,
		mem_gift_send.createTime,
		mem_gift_send.updateTime,
		mem_gift_send.billCode,
		mem_gift_send.channel
	</sql>

	<sql id="Where_Condition">
		<where>
			<trim prefixOverrides="and">
				<!-- 匹配查询 -->
				<if test="id != null">and mem_gift_send_detail.id = #{id}</if>
				<if test="sendId != null">and mem_gift_send_detail.sendId = #{sendId}</if>
				<if test="giftId != null">and mem_gift_send_detail.giftId = #{giftId}</if>
				<if test="channel != null">and mem_gift_send.channel = #{channel}</if>
				<if test="accountPk != null">and mem_gift_send.accountPk = #{accountPk}</if>
				<if test="createTime != null and createTime != ''">and DATE_FORMAT(mem_gift_send.createTime ,'%Y-%m-%d') = #{createTime} </if>
				<if test="updateTime != null and updateTime != ''">and DATE_FORMAT(mem_gift_send.updateTime ,'%Y-%m-%d') = #{updateTime} </if>
				<!-- 模糊查询 -->
				<if test="consigneePhoneLike != null and consigneePhoneLike != ''">and mem_gift_send.consigneePhone like CONCAT('%',#{consigneePhoneLike},'%')</if>
				<if test="consigneeLike != null and consigneeLike != ''">and mem_gift_send.consignee like CONCAT('%',#{consigneeLike},'%')</if>
			</trim>
		</where>
	</sql>

	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long"
		parameterType="java.util.Map">
		select count(mem_gift_send_detail.id) from mem_gift_send_detail
		left join mem_gift_send on mem_gift_send.id = mem_gift_send_detail.sendId
		<include refid="Where_Condition" />
	</select>

	<!-- 查询 -->
	<select id="select" resultMap="ResultMap" parameterType="java.util.Map">
		select
		<include refid="DB_Column_List" />
		from mem_gift_send_detail
		left join mem_gift_send on mem_gift_send.id = mem_gift_send_detail.sendId
		<include refid="Where_Condition" />
		<if test="sort == null">order by mem_gift_send.state </if>
        <if test="sort != null">order by ${sort} ${order}</if>
		<if test="isPage == true">
			<if test="offset != null and limit != null">
            	limit #{offset}, #{limit}
        	</if>
		</if>
	</select>
	
    <!-- 根据ID查询 -->
	<select id="selectById" resultMap="ResultMap" parameterType="java.lang.Integer">
		select
		<include refid="DB_Column_List" />
		from mem_gift_send_detail
		left join mem_gift_send on mem_gift_send.id = mem_gift_send_detail.sendId
		where mem_gift_send_detail.id = #{id}
	</select>
	
	<!-- 添加 -->
	<insert id="insert" parameterType="com.aylson.dc.mem.po.GiftSendDetail">
		insert into mem_gift_send_detail
		<trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="sendId != null" > sendId, </if>
		  <if test="giftId != null" > giftId, </if>
		  <if test="giftName != null" > giftName, </if>
		</trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="sendId != null" > #{sendId}, </if>
		  <if test="giftId != null" > #{giftId}, </if>
		  <if test="giftName != null" > #{giftName}, </if>
        </trim>
	</insert>

	<!-- 更新 -->
	<update id="updateById" parameterType="com.aylson.dc.mem.po.GiftSendDetail">
		update 
			mem_gift_send_detail 
		<set>
			<if test="sendId != null"> sendId = #{sendId}, </if>
			<if test="giftId != null"> giftId= #{giftId}, </if>
			<if test="giftName != null"> giftName = #{giftName}, </if>
		</set>
		 where id = #{id} 
	</update>

	<!-- 根据ID删除 -->
	<delete id="deleteById" parameterType="java.lang.Integer">
		delete from mem_gift_send_detail
		where id = #{id}
	</delete>
	
	<!-- 删除 -->
	<delete id="delete" parameterType="java.util.Map">
		delete from mem_gift_send_detail
		<include refid="Where_Condition" />
	</delete>
	
	<!-- 批量添加 -->
	<insert id="batchInsert" parameterType="java.util.List">
		insert into mem_gift_send_detail(
			sendId,
			giftId,
			giftName
		) 
    	values   
	    <foreach collection="list" item="item" index="index" separator="," >  
	    (
			#{item.sendId},
			#{item.giftId},
			#{item.giftName}
		)
	    </foreach> 
	</insert>
	
</mapper>